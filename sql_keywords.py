from talon import Module, Context

mod = Module()
mod.list("sql_keywords", desc="SQL Keywords")

ctx_default = Context()
ctx_default.lists["user.sql_keywords"] = {
    "select": " SELECT ",
    "from": " FROM ",
    "where": " WHERE ",
    "insert": " INSERT ",
    "update": " UPDATE ",
    "delete": " DELETE ",
    "create": " CREATE ",
    "drop": " DROP ",
    "alter": " ALTER ",
    "table": " TABLE ",
    "view": " VIEW ",
    "index": " INDEX ",
    "procedure": " PROCEDURE ",
    "function": " FUNCTION ",
    "trigger": " TRIGGER ",
    "begin": " BEGIN ",
    "end": " END ",
    "if": " IF ",
    "else": " ELSE ",
    "for": " FOR ",
    "while": " WHILE ",
    "case": " CASE ",
    "when": " WHEN ",
    "then": " THEN ",
    "else": " ELSE ",
    "and": " AND ",
    "or": " OR ",
    "not": " NOT ",
    "null": " NULL ",
    "is": " IS ",
    "in": " IN ",
    "like": " LIKE ",
    "between": " BETWEEN ",
    "exists": " EXISTS ",
    "join": " JOIN ",
    "inner": " INNER ",
    "outer": " OUTER ",
    "left": " LEFT ",
    "right": " RIGHT ",
    "full": " FULL ",
    "cross": " CROSS ",
    "natural": " NATURAL ",
    "union": " UNION ",
    "all": " ALL ",
    "order by": " ORDER BY ",
    "group by": " GROUP BY ",
    "having": " HAVING ",
    "ascending": " ASC ",
    "descending": " DESC ",
    "limit": " LIMIT ",
    "offset": " OFFSET ",
    "set": " SET ",
    "distinct": " DISTINCT ",
    "primary key": " PRIMARY KEY ",
    "foreign key": " FOREIGN KEY ",
    "references": " REFERENCES ",
    "default": " DEFAULT ",
    "collate": " COLLATE ",
    "auto increment": " AUTOINCREMENT ",
    "unique": " UNIQUE ",
    "check": " CHECK ",
    "constraint": " CONSTRAINT ",
    "index": " INDEX ",
    "view": " VIEW ",
    "trigger": " TRIGGER ",
    "procedure": " PROCEDURE ",
    "function": " FUNCTION ",
    "database": " DATABASE ",
    "schema": " SCHEMA ",
    "if exists": " IF EXISTS ",
    "if not exists": " IF NOT EXISTS ",
    "cascade": " CASCADE ",
    "restrict": " RESTRICT ",
    "no action": " NO ACTION ",
    "set null": " SET NULL ",
    "set default": " SET DEFAULT ",
    "add column": " ADD COLUMN ",
    "add constraint": " ADD CONSTRAINT ",
    "add foreign key": " ADD FOREIGN KEY ",
    "add primary key": " ADD PRIMARY KEY ",
    "add unique": " ADD UNIQUE ",
    "add check": " ADD CHECK ",
    "add index": " ADD INDEX ",
    "add view": " ADD VIEW ",
    "add trigger": " ADD TRIGGER ",
    "add procedure": " ADD PROCEDURE ",
    "add function": " ADD FUNCTION ",
    "add database": " ADD DATABASE ",
    "add schema": " ADD SCHEMA ",
    "drop column": " DROP COLUMN ",
    "drop constraint": " DROP CONSTRAINT ",
    "drop foreign key": " DROP FOREIGN KEY ",
    "drop primary key": " DROP PRIMARY KEY ",
    "drop unique": " DROP UNIQUE ",
    "drop check": " DROP CHECK ",
    "drop index": " DROP INDEX ",
    "drop view": " DROP VIEW ",
    "drop trigger": " DROP TRIGGER ",
    "drop procedure": " DROP PROCEDURE ",
    "drop function": " DROP FUNCTION ",
    "drop database": " DROP DATABASE ",
    "drop schema": " DROP SCHEMA ",
    "rename column": " RENAME COLUMN ",
    "rename table": " RENAME TABLE ",
    "rename constraint": " RENAME CONSTRAINT ",
    "rename index": " RENAME INDEX ",
    "rename view": " RENAME VIEW ",
    "rename trigger": " RENAME TRIGGER ",
    "rename procedure": " RENAME PROCEDURE ",
    "rename function": " RENAME FUNCTION ",
    "rename database": " RENAME DATABASE ",
    "rename schema": " RENAME SCHEMA ",
    "truncate table": " TRUNCATE TABLE ",
    "select star from": " SELECT * FROM ",
    "select star": " SELECT * ",
    "select count": " SELECT COUNT(*) ",
    "select distinct": " SELECT DISTINCT ",
    "select top": " SELECT TOP ",   
}

